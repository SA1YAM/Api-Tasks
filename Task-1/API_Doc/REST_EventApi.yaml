openapi: 3.0.3
info:
  title: RestAPI 
  description: |-
    This a document for the Rest API used for CRUD opeartions OF Event in backend.
  version: 3.0.0
  
servers:
  - url: http://127.0.0.1:5000/api/v3/app
tags: 
  - name: Events
    description: Request methods for Post

paths:
  /events:
    post:
      tags:
        - Events
      summary: Create Event
      description: Creation of Event
      requestBody:
        description: Request Body
        required: True
        content:
           multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: event name
                image:
                  type: string
                  description: uploaded image
                  format: binary
                tagline:
                  type: string
                  example: event tagline
                schedule:
                  type: string
                  example: 2020-07-02 12:32
                  format: date-time
                description:
                  type: string
                  example: event description
                moderator:
                  type: string
                  example: event moderator
                category:
                  type: string
                  example: event category
                sub_category:
                  type: string
                  example: event sub_category
                rigor_rank:
                  type: integer
                  format: int 64
                  example: 4
                
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 2
                    
        '400':
          description: Bad Request
          
    get:
      tags:
        - Events
      parameters:
      - in: query
        name: id
        schema:
          type: integer
        description: event ID
      - in: query
        name: type
        schema:
          type: string
        description: type
      - in: query
        name: limit
        schema:
          type: integer
        description: limit
      - in: query
        name: page
        schema:
          type: integer
        description: page
      summary: Get Event
      description: Returns the Event by event id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'          
        '400':
          description: Bad Request
        '401':
          description: Authentication Failed
          
  /events/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: event ID
    put:
      tags:
        - Events
      summary: Edit Event
      description: Modification of Event
      requestBody:
        description: Request Body
        required: True
        content:
           multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: event name
                image:
                  type: string
                  description: uploaded image
                  format: binary
                tagline:
                  type: string
                  example: event tagline
                schedule:
                  type: string
                  example: 2020-07-02 12:32
                  format: date-time
                description:
                  type: string
                  example: event description
                moderator:
                  type: string
                  example: moderator
                category:
                  type: string
                  example: category
                sub_category:
                  type: string
                  example: sub_category
                rigor_rank:
                  type: integer
                  format: int 64
                  example: 4
                  
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'  
                       
        '400':
          description: Bad Request

    delete:
      tags:
        - Events
      summary: Delete Event
      description: Deletes the Event
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad Request
          
          
components:
  schemas:
    Event:
      required:
        - id
        - type
        - name
        - image
        - tagline
        - schedule
        - description
        - moderator
        - category
        - sub_category
        - rigor_rank

      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        type:
          type: string
          example: event
        uid:
          type: integer
          format: int64
          example: 5
        name:
          type: string
          example: event name
        tagline:
          type: string
          example: event tagline
        schedule:
          type: string
          description: schedule of the event
          format: date-time
          example: 2020-07-02 12:32:12
        description:
          type: string
          example: event description
        moderator:
          type: string
          description: Image url of the profile photo
          example: filename.jpg
        category:
          type: string
          example: 'zyzz,zdfd'
        sub_category:
          type: string
          example: 'html'
        rigor_rank:
          type: integer
          format: int 64
          example: 5
        attendees:
          type: array
          items:
            type: integer
            example : []
          description: the users that current user is following
        image:
          type: string
          description: uploaded image
          format: binary
          
    User:
      required:
        - user_id
        - username
        - event_id
        
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        event_id:
          type: integer
          description: id of Event(Foreign Key)
          format: int64
          example: 10